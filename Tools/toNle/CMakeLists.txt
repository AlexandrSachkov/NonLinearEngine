CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(toNle)

set (NLE_VERSION_MAJOR 0)
set (NLE_VERSION_MINOR 9)
set (NLE_VERSION_PATCH 0)

SET(HEADERS 
	NL_AssetConverter.h
	)

SET(SOURCES 
	NL_AssetConverter.cpp
	)


# Assimp
SET(NLE_ASSIMP_INCLUDE_PATH
	"" CACHE PATH "NLE Assimp include path")

IF(NLE_ASSIMP_INCLUDE_PATH STREQUAL "")
	MESSAGE(SEND_ERROR "NLE Assimp include path must be specified")
ENDIF(NLE_ASSIMP_INCLUDE_PATH STREQUAL "")

SET(NLE_ASSIMP_LIBRARY_DEBUG_PATH
	"" CACHE PATH "NLE Assimp library debug path")

IF(NLE_ASSIMP_LIBRARY_DEBUG_PATH STREQUAL "")
	MESSAGE(SEND_ERROR "NLE Assimp library debug path must be specified")
ENDIF(NLE_ASSIMP_LIBRARY_DEBUG_PATH STREQUAL "")

SET(NLE_ASSIMP_LIBRARY_RELEASE_PATH
	"" CACHE PATH "NLE Assimp library release path")

IF(NLE_ASSIMP_LIBRARY_RELEASE_PATH STREQUAL "")
	MESSAGE(SEND_ERROR "NLE Assimp library release path must be specified")
ENDIF(NLE_ASSIMP_LIBRARY_RELEASE_PATH STREQUAL "")


# Rapid JSON
SET(NLE_RAPID_JSON_INCLUDE_PATH
	"" CACHE PATH "NLE Rapid JSON include path")

IF(NLE_RAPID_JSON_INCLUDE_PATH STREQUAL "")
	MESSAGE(SEND_ERROR "NLE Rapid JSON include path must be specified")
ENDIF(NLE_RAPID_JSON_INCLUDE_PATH STREQUAL "")


# GLM
SET(NLE_GLM_INCLUDE_PATH
	"" CACHE PATH "NLE GLM include path")

IF(NLE_GLM_INCLUDE_PATH STREQUAL "")
	MESSAGE(SEND_ERROR "NLE GLM include path must be specified")
ENDIF(NLE_GLM_INCLUDE_PATH STREQUAL "")


INCLUDE_DIRECTORIES(
	${NLE_ASSIMP_INCLUDE_PATH}
	${NLE_RAPID_JSON_INCLUDE_PATH}
	${NLE_GLM_INCLUDE_PATH}
	)

IF(NLE_HOST_OS STREQUAL "Windows")
	ADD_DEFINITIONS(
	-D_WIN32_WINNT=0x0601
	-DWINVER=0x0601
	)
ENDIF(NLE_HOST_OS STREQUAL "Windows")

LINK_DIRECTORIES(
	${NLE_ASSIMP_LIBRARY_DEBUG_PATH}
	${NLE_ASSIMP_LIBRARY_RELEASE_PATH}
	)

add_executable (toNle
  ${HEADERS}
  ${SOURCES}
)

TARGET_LINK_LIBRARIES(toNle 	
	debug assimpd
	optimized assimp
	)

set_target_properties(toNle PROPERTIES DEBUG_POSTFIX _d)
