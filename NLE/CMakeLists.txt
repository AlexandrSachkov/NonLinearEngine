PROJECT(NLE)

SET(HEADERS 
	NL_DllApi.h
	NL_Engine.h
	NL_IEngine.h
	)

SET(SOURCES NL_Engine.cpp)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})
ADD_SUBDIRECTORY(NLCore)
ADD_SUBDIRECTORY(NLApplication)

INCLUDE_DIRECTORIES(
	${NLE_TBB_INCLUDE_PATH}
	)

LINK_DIRECTORIES(
	${NLE_TBB_LIBRARY_DEBUG_PATH}
	${NLE_SDK_INSTALL_PATH}/lib
	)

IF(NLE_TBB_LIBRARY_DEBUG_PATH STREQUAL NLE_TBB_LIBRARY_RELEASE_PATH)
ELSE(NLE_TBB_LIBRARY_DEBUG_PATH STREQUAL NLE_TBB_LIBRARY_RELEASE_PATH)
	LINK_DIRECTORIES(${NLE_TBB_LIBRARY_RELEASE_PATH})
ENDIF(NLE_TBB_LIBRARY_DEBUG_PATH STREQUAL NLE_TBB_LIBRARY_RELEASE_PATH)

add_library (NLE SHARED
  ${HEADERS}
  ${SOURCES}
)

TARGET_LINK_LIBRARIES(NLE 
	debug tbb_debug
	optimized tbb
	debug tbb_preview_debug
	optimized tbb_preview
	debug tbbmalloc_debug
	optimized tbbmalloc
	debug tbbmalloc_proxy_debug
	optimized tbbmalloc_proxy
	debug tbbproxy_debug
	optimized tbbproxy
	
	debug NLCore_d
	optimized NLCore
	debug NLApplication_d
	optimized NLApplication
	)

set_target_properties(NLE PROPERTIES DEBUG_POSTFIX _d)
install (
	TARGETS NLE 
	RUNTIME DESTINATION ${NLE_SDK_INSTALL_PATH}/bin
	LIBRARY DESTINATION ${NLE_SDK_INSTALL_PATH}/lib/shared
	ARCHIVE DESTINATION ${NLE_SDK_INSTALL_PATH}/lib
	)

install (FILES ${HEADERS} DESTINATION ${NLE_SDK_INSTALL_PATH}/include/${PROJECT_NAME})